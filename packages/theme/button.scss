@use './mixins/function' as *;
@use './mixins/button' as *;
@use './mixins/var' as *;
@use './common/var' as *;

$btn-prefix-cls: 'soft-btn' !default;

.#{$btn-prefix-cls} {
  @include set-component-css-var('btn', $btns);
}

.#{$btn-prefix-cls} {
  display: inline-block;
  font-family: inherit;
  font-weight: getCssVar('font-weight-normal');
  color: getCssVar('text-default');
  letter-spacing: getCssVar('letter-spacing');
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  cursor: pointer;
  text-decoration: none;
  border: 1px solid getCssVar('border-color');
  box-shadow: getCssVar('box-shadow-default');
  box-sizing: border-box;
  @include btn-size(
    getCssVar('btn', 'height'),
    getCssVar('padding-y'),
    getCssVar('padding-x'),
    getCssVar('font-size-base'),
    getCssVar('line-height-base'),
    getCssVar('border-radius')
  );

  &:not(:disabled):not(.disabled):hover,
  &:not(:disabled):not(.disabled):focus {
    border-color: getCssVar('body-bg');
    box-shadow: getCssVar('box-shadow-inset');
  }

  @each $type in (primary, success, info, warning, danger) {
    &-text-#{$type} {
      color: getCssVar('#{$type}');
    }
  }

  &.disabled,
  &:disabled {
    opacity: 0.8;
    cursor: not-allowed;
  }

  &-icon-loading {
    display: inline-block;
    width: 1em;
    height: 1em;
    vertical-align: text-bottom;
    border: 3px solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: spinner-border 0.75s linear infinite;
    margin-right: 0.5em;
  }

  &-sm {
    @include btn-size(
      getCssVar('btn', 'height-sm'),
      getCssVar('padding-y-sm'),
      getCssVar('padding-x-sm'),
      getCssVar('font-size-sm'),
      getCssVar('line-height-base'),
      getCssVar('border-radius')
    );
  }

  &-lg {
    @include btn-size(
      getCssVar('btn', 'height-lg'),
      getCssVar('padding-y-lg'),
      getCssVar('padding-x-lg'),
      getCssVar('font-size-lg'),
      getCssVar('line-height-base'),
      getCssVar('border-radius')
    );
  }

  &-round {
    border-radius: getCssVar('border-radius-round');
  }

  &-circle {
    border-radius: getCssVar('border-radius-circle');
  }

  .#{$btn-prefix-cls}-slot {
    display: inline-block;
    vertical-align: middle;
    font-size: 1.2em;
    line-height: 1;
  }

  &-icon-only {
    padding: 0;
    width: $btn-height;
    height: $btn-height;
    line-height: $btn-height;

    span,
    i {
      position: absolute;
      top: 50%;
      left: 50%;
      @include translate(-50%, -50%);
    }
  }
}

@keyframes spinner-border {
  to {
    transform: rotate(360deg);
  }
}
